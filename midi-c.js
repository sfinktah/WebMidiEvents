// Generated by CoffeeScript 1.9.1
var aControllerMap, fNotifyChangeInValue, oBlue, oGreen, oRed, onFailure, onSuccess;

oRed = new EventedVar(0, 1);

oGreen = new EventedVar(0, 3);

oBlue = new EventedVar(0, 5);

fNotifyChangeInValue = function(newValue) {
  var a, d, value;
  console.log("fNotifyChangeInValue " + (newValue * 2));
  value = newValue * 2;
  d = document.getElementById("rgbSwatch");
  a = d.style.backgroundColor.split(/[\(\), ]/);
  a[this.arbitaryValue] = value;
  d.style.backgroundColor = a[0] + "(" + a[1] + ", " + a[3] + ", " + a[5] + ")";
  d = document.getElementById("colorBar" + this.arbitaryValue);
  d.style.width = (value >> 1) + "px";
  return value;
};

oRed.notifyChangeInValue = oBlue.notifyChangeInValue = oGreen.notifyChangeInValue = fNotifyChangeInValue;

aControllerMap = [null, oRed, oGreen, oBlue];

onSuccess = function() {
  var test;
  test = function(e) {
    console.log(e);
  };
  console.log('WebMidi enabled.');
  console.log(WebMidi.inputs);
  console.log(WebMidi.time);
  WebMidi.addListener('noteon', function(e) {
    var note, velocity;
    note = e.note.number;
    velocity = e.velocity;
    console.log('noteon', note, velocity);
  });
  WebMidi.addListener('noteoff', function(e) {
    var note, velocity;
    note = e.note.number;
    velocity = e.velocity;
    console.log('noteoff', note, velocity);
  });
  WebMidi.addListener('controlchange', function(e) {
    var control, oController, value;
    control = e.control;
    value = e.value;
    console.log('controlchange', control, value);
    oController = aControllerMap[control];
    if (!!oController) {
      oController.value = value;
    }
  });
  WebMidi.addListener('pitchbend', function(e) {
    console.log('pitchbend', e.value);
  });
  WebMidi.addListener('statechange', function(e) {
    console.log(e);
  });
  WebMidi.addListener('statechange', test);
  console.log('Has event listener: ', WebMidi.hasListener('statechange', test));
  WebMidi.removeListener('statechange', test);
  console.log('Has event listener: ', WebMidi.hasListener('statechange', test));
};

onFailure = function(err) {
  console.log('WebMidi could not be enabled.', err);
};

WebMidi.enable(onSuccess, onFailure);
